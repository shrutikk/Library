/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2015-11-03 18:59:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Date;
import java.util.Calendar;
import java.text.*;
import java.util.ArrayList;

public final class AllRoomsInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function reserveRoomRedirect(rid){\r\n");
      out.write("\twindow.location=\"ReserveRoom.jsp?resourceId=\"+rid;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<title>Available rooms</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
HttpSession sess = request.getSession(false); 
      out.write("\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("   <li>");
if(sess.getAttribute("patrontype").equals("faculty")){
      out.write(" <a href=\"Faculty.jsp\">Home</a>");
}else if(sess.getAttribute("patrontype").equals("student")){
      out.write("<a href=\"Student.jsp\">Home</a>");
} 
      out.write("</li>\r\n");
      out.write("  \t<li><a href=\"Rooms.jsp\">All Rooms</a></li>\r\n");
      out.write("  <li class=\"active\">Room Details</li>\r\n");
      out.write("</ol>\r\n");

String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
String DB_URL = "jdbc:mysql://54.218.118.111:3306/db_project";

String USER = "root";
String PASS = "";
Connection conn = null;
String FacultyId,facultyFisrtName,facultyLastName,category,nationality,dName;
float balance;
Date dob;
	Class.forName(JDBC_DRIVER);
	conn = DriverManager.getConnection(DB_URL, USER,null);
	ResultSet rooms = (ResultSet)request.getAttribute("roomInfo");

      out.write("\r\n");
      out.write("<table class=\"table table-striped\" id=\"roomsTable\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th>Resource ID</th>\r\n");
      out.write("<th>Room Number</th>\r\n");
      out.write("<th>Room Type</th>\r\n");
      out.write("<th>Floor Number</th>\r\n");
      out.write("<th>Capacity</th>\r\n");
      out.write("</tr>\r\n");
	
	while(rooms.next())
	{

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print(rooms.getInt(1));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rooms.getString(2));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rooms.getString(3));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rooms.getString(4));
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(rooms.getInt(5));
      out.write("</td>\r\n");
      out.write("<td><button type=\"submit\" class=\"btn btn-default\" value=\"");
      out.print(rooms.getInt(1));
      out.write("\" onclick=\"reserveRoomRedirect(");
      out.print(rooms.getInt(1));
      out.write(")\">Reserve</button></td>\r\n");
      out.write("</tr>\r\n");
	   
	}	

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
