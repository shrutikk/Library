/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2015-11-02 22:04:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class CameraDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("  <script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("  <script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"></script>\r\n");
      out.write("<title>Reserve Camera</title>\r\n");
      out.write("<script>\r\n");
      out.write("  $(function() {\r\n");
      out.write("    $( \"#datepicker\" ).datepicker({\r\n");
      out.write("    \tbeforeShowDay: function(date) {\r\n");
      out.write("            return [date.getDay() == 5];\r\n");
      out.write("        },\r\n");
      out.write("        dateFormat:\"yy-mm-dd\"\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("  function reservercamera()\r\n");
      out.write("  {\r\n");
      out.write("\t  var reserveServletUrl = \"/Library/ReserveCamera?reserveDate=\"+document.getElementById(\"datepicker\").value;\r\n");
      out.write("  \t  window.location.href = reserveServletUrl;\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
HttpSession sess = request.getSession(false); 
      out.write("\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("  <li>");
if(sess.getAttribute("patrontype").equals("faculty")){
      out.write(" <a href=\"Faculty.jsp\">Home</a>");
}else if(sess.getAttribute("patrontype").equals("student")){
      out.write("<a href=\"Student.jsp\">Home</a>");
} 
      out.write("</li>\r\n");
      out.write("  <li><a href=\"Camera.jsp\">Camera</a></li>\r\n");
      out.write("  <li class=\"active\">");
      out.print((String)request.getAttribute("camera"));
      out.write("</li>\r\n");
      out.write("</ol>\r\n");

String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
String DB_URL = "jdbc:mysql://54.218.118.111:3306/db_project";
String lens_conf,memory,make,model;
int resource_id;
String USER = "root";
String PASS = "";

String patronId=(String)sess.getAttribute("patronid");
Connection conn = null;
Class.forName(JDBC_DRIVER);
conn = DriverManager.getConnection(DB_URL, USER,null);
PreparedStatement pstmt = conn.prepareStatement("{call getCameraById(?)}");
pstmt.setString(1, (String)request.getAttribute("camera"));
ResultSet rs = pstmt.executeQuery();                
rs.next();
lens_conf=rs.getString(2);
memory=rs.getString(3);
make=rs.getString(4);
model=rs.getString(5);
resource_id=rs.getInt(6);
sess.setAttribute("resourceId", resource_id);
sess.setAttribute("camera", (String)request.getAttribute("camera"));


      out.write('\r');
      out.write('\n');
 if(request.getAttribute("rettype")!=null){
if(request.getAttribute("rettype").equals("end time")){
	
      out.write("\r\n");
      out.write("\t<div class=\"alert alert-success fade in\">\r\n");
      out.write("    <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\r\n");
      out.write("    <strong>Success!</strong> You have successfully reserved the Camera. Due on ");
      out.print((String)request.getAttribute("reservationstatus") );
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("\t");
 
}else if(request.getAttribute("rettype").equals("position")){
	
      out.write("\r\n");
      out.write("\t<div class=\"alert alert-danger fade in\">\r\n");
      out.write("    <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\r\n");
      out.write("    <strong>Camera Already Booked. You are in queue.</strong> Queue position ");
      out.print((String)request.getAttribute("reservationstatus") );
      out.write("\r\n");
      out.write("  \t</div>\r\n");
      out.write("\t");

	
}
}

      out.write(" \r\n");
      out.write("<div class=\"panel panel-default\">\r\n");
      out.write("  <div class=\"panel-heading\">\r\n");
      out.write("    <h3 class=\"panel-title\">Camera Details</h3>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"panel-body\">\r\n");
      out.write("    <p>Lens Configuration : ");
      out.print(lens_conf );
      out.write("</p>\r\n");
      out.write("    <p>Memory : ");
      out.print(memory );
      out.write("</p>\r\n");
      out.write("    <p>Make : ");
      out.print(make );
      out.write("</p>\r\n");
      out.write("    <p>Model : ");
      out.print(model );
      out.write("</p>\r\n");
      out.write("    \r\n");
      out.write("    <p>Date: <input type=\"text\" id=\"datepicker\" name=\"camreservedate\"></p> \r\n");
      out.write("    <button type=\"button\" class=\"btn btn-default\" onclick=\"reservercamera()\">Reserve</button>\r\n");
      out.write("   \r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
